<!doctype html>

<html lang="en">
<head>
    <meta charset="utf-8">

    <title>StudioHub Style Guides</title>
    <meta name="description" content="StudioHub Style Guides">
    <meta name="author" content="Mike King">
    <link rel="stylesheet" href="css/styles.css?v=1.0">
    <link rel="stylesheet" href="css/fonts.css?v=1.0">
    <link rel="shortcut icon" href="favicon.ico?v=2">
    <script type="text/javascript" src="scripts/jquery-1.11.1.js"></script>
    <script type="text/javascript" src="scripts/main.js"></script>
    <!-- <script type="text/javascript" src="less-1.4.1.min.js"></script>
    <link rel="stylesheet" href="css/styles.less?v=1.0"> -->
</head>

<body>
<header class="page-header">
    <nav class="top-menu">
        <ul>
            <li><a href="https://apps-stage.umusic.com/home/" target="_Blank">UMG Platform - Stage</a></li>
            <li><a href="mailto:mike.king@umusic.com?subject=UMG%20Platform%20Style%20Guides" target="_Blank">Contact Author</a></li>
        </ul>
    </nav>
    <section class="middle-section">
        <!--<section class="headphones"></section>-->
        <hgroup>
            <h1>UMG Platform</h1>
            <h3>Style Guides</h3>
        </hgroup>
    </section>
    <nav class="bottom-menu">
        <ul>
            <li class="menu-group">
                <h5>Branding</h5>
                <ul>
                    <li><a href="#logodesign">Logo Design</a></li>
                    <li><a href="#typography">Typography</a></li>
                    <li><a href="#colourusage">Colour Usage</a></li>
                    <li><a href="#icons">Icons</a></li>
                </ul>
            </li>
            <li class="menu-group">
                <h5>Navigation</h5>
                <ul>
                    <li><a href="#navigation">UMG Platform</a></li>
                    <li><a href="#mainnav">Main Navigation</a></li>
                    <li><a href="#quicklinks">Quick Links</a></li>
                    <li><a href="#sliders">Sliders</a></li>
                </ul>
            </li>     
            <li class="menu-group">
                <h5>Markup</h5>
                <ul>
                    <li><a href="#html5">HTML5</a></li>
                    <li><a href="#lists">Unordered Lists</a></li>
                    <li><a href="#tables">Tables {</a></li>
                    <li><a href="#scrolling">Scrolling</a></li>
                    <li><a href="#stickyHeaders">Sticky Headers</a> }</li>
                </ul>
            </li>
            <li class="menu-group">
                <h5>Controls</h5>
                <ul>
                    <li><a href="#buttons">Buttons</a></li>
                    <li><a href="#popupsmoreinfo">Popups - For More Info</a></li>
                    <li><a href="#popupsmanage">Popups - To Manage Stuff</a></li>
                    <li><a href="#expandcollapse">Expand/Collapse All</a></li>
                </ul>
            </li>
            <li class="menu-group">
                <h5>Handy Snippets</h5>
                <ul>
                    <li><a href="#comma">Optional Comma</a></li>
                    <li><a href="#match">Match Heights</a></li>
                    <li><a href="#attr">Add Attributes</a></li>
                    <li><a href="#selects">Select Dropdown Lookup</a></li>
                    <li><a href="#print">Printing</a></li>
                </ul>
            </li>
            <li class="menu-group">
                <h5>Validation</h5>
                <ul>
                    <li><a href="#client">Client Side</a></li>
                    <li><a href="#server">Server Side</a></li>
                </ul>
            </li>
        </ul>
    </nav>
</header>
<div class="content">
<!------------------------------------------------------------------- BRANDING ------------------------------------------------------------------->

<section>
<article>
    <a name="logodesign"><div class="spacer"></div></a>
    <h2>Branding</h2>
    <h3>Logo Design</h3>
    <div class="logos umglogo">
        <span>
            <label>SMALL</label>
            <a class="first" href="images/umg-logos/small/umg-on-wht-bg.svg" download>BLACK</a>
            <a href="images/umg-logos/small/umg-on-blk-bg.svg" download>WHITE</a>
        </span>
            
        <span>
            <label>LARGE</label>
            <a class="first" href="images/umg-logos/large/branding-umg-platform-on-wht.svg" download>BLACK</a>
            <a href="images/umg-logos/large/branding-umg-platform-on-blk.svg" download>WHITE</a>
        </span>

    </div>
    <section class="inline">
        <div class="logos stuhublogo">
            <span>
                <label>SMALL</label>
                <a class="first" href="images/umg-logos/small/studio-hub-on-wht-bg.svg" download>BLACK</a>
                <a href="images/umg-logos/small/studio-hub-on-blk-bg.svg" download>WHITE</a>
            </span>
            
            <span>
                <label>LARGE</label>
                <a class="first" href="images/umg-logos/large/branding-umg-studiohub-on-wht.svg" download>BLACK</a>
                <a href="images/umg-logos/large/branding-umg-studiohub-on-blk.svg" download>WHITE</a>
            </span>
        </div>
        <div class="logos supplychainlogo">
            <span>
                <label>SMALL</label>
                <a class="first" href="images/umg-logos/small/supply-chain-on-wht-bg.svg" download>BLACK</a>
                <a href="images/umg-logos/small/supply-chain-on-blk-bg.svg" download>WHITE</a>
            </span>
            
            <span>
                <label>LARGE</label>
                <a class="first" href="images/umg-logos/large/branding-umg-supplychain-on-wht.svg" download>BLACK</a>
                <a href="images/umg-logos/large/branding-umg-supplychain-on-blk.svg" download>WHITE</a>
            </span>
        </div>
        <div class="logos righthublogo">
            <span>
                <label>SMALL</label>
                <a class="first" href="images/umg-logos/small/rights-hub-on-wht-bg.svg" download>BLACK</a>
                <a href="images/umg-logos/small/rights-hub-on-blk-bg.svg" download>WHITE</a>
            </span>
            
            <span>
                <label>LARGE</label>
                <a class="first" href="images/umg-logos/large/branding-umg-rightshub-on-wht.svg" download>BLACK</a>
                <a href="images/umg-logos/large/branding-umg-rightshub-on-blk.svg" download>WHITE</a>
            </span>
        </div>
    </section>
    <h4>Concept</h4>
    <h6>Design</h6>
    <p>The logo's have been designed to follow a common set of principles and be recognised as part of a group of websites that form the UMG Platform. Stylized to a 'San Serif' format with narrow kerning, light in weight and flowing rounded curves, with short ascenders and descenders. Split between dark and light grey, each with a vibrant icon to help solidify the overall concept.</p>
    <ul>
        <li><strong>StudioHub</strong> - (O) Power Button, commonly used for powering up audio equipment.</li>
        <li><strong>SupplyChain</strong> - Arrow represents completed projects entering the Supply Chain.</li>
        <li><strong>RightsHub</strong> - (S) The plan view of two people shanking hands to consolidate the deal.</li>
    </ul>
    <h6>Usage</h6>
    <p>All logo's are vector-based (SVG) and are fully scaleable without losing quality.
        Any additional logos used in the solution, must be converted to Data Url's using this
        tool <a href="http://dataurl.net/#dataurlmaker" target="blank">dataurlmaker</a>. Please add the generated code to the <strong>'images-data.less'</strong> file.
    </p>
    <p> <strong>*Note:</strong> For each additional image, please refresh your browser, otherwise the subsequent image data-url gets corrupted.</p>
    <p>When using any <strong>UMG Platform</strong> logo's, either for web or print, the
        colour scheme and lettering must remain exactly as the original specified in this document.
        Do not distort the apsect
        ratio or skew/rotate all or any section of the logo. The logo can be scaled up or
        down to any given size, but, there needs to be a minimum margin of 5 pixels around
        the logo wherever used. Colours from left to right are as follows:
    </p>
    <ul>
        <li>Text to the Left : Hex: <strong>#333333</strong>, RGB : <strong>51.51.51</strong></li>
        <li>Center Icons and Flags : Hex: <strong>#c93500</strong>, RGB : <strong>201.53.0</strong></li>
        <li>Text to the Right : Hex: <strong>#999999</strong>, RGB : <strong>153.153.153</strong></li>
    </ul>
</article>

<article>
    <a name="typography"><div class="spacer"></div></a>
    <h3>Typography</h3>
    <p>Google's open source font '<a href="https://fonts.google.com/specimen/Open+Sans?selection.family=Open+Sans" target="_Blank">Open Sans</a>' is used exclusively across studio hub and no other font should be introduced with the current design specifications.
    </p>
    <p>Open Sans has several variations in style and these are used as follows:</p>
    <h4>Google Open Source Fonts</h4>
    <h6>Body Copy</h6>
    <ul>
        <li>Default : <span class="ital">Open Sans Regular : 1.2em : #333333 : Line-Height 16 pixels</span></li>
        <li>Bold (use a 'strong' tag for bold copy) : <span class="ital">Open Sans Semi Bold : 1.2em : #333333 : Line-Height 16 pixels</span></li>
    </ul>
    <h6>Headings</h6>
    <ul>
        <li>H1 : <span class="ital">Open Sans Light : 30 pixels : #666666</span></li>
        <li>H2 : <span class="ital">Open Sans Light : 24 pixels : #333333</span></li>
        <li>H3 : <span class="ital">Open Sans Regular : 16 pixels : #666666</span></li>
        <li>H4 : <span class="ital">Open Sans Semi-Bold : 12 pixels : #666666</span></li>
    </ul>
</article>

<article>
    <a name="colourusage"><div class="spacer"></div></a>
    <h3>Colour Usage</h3>
    <h4>ALL Call-To-Actions</h4>
    <section class="three-cols">
        <div class="cube red"></div>
        <strong>#c93500</strong>
    </section>
    <section class="three-cols">
        <div class="cube bright-red"></div>
        <strong>#E03C00 - <span class="ital-light">use on dark bg only #333333</span></strong>
    </section>
    <h4>Grey Pallete for Background Tints (Web-Safe)</h4>
    <section class="three-cols">
        <div>
            <div class="cube _333"></div>
            <strong>#333333</strong>
        </div>
        <div>
            <div class="cube _444"></div>
            <strong>#444444</strong>
        </div>
        <div>
            <div class="cube _666"></div>
            <strong>#666666</strong>
        </div>
        <div>
            <div class="cube _777"></div>
            <strong>#777777</strong>
        </div>
        <div>
            <div class="cube _888"></div>
            <strong>#888888</strong>
        </div>
    </section>
    <section class="three-cols">
        <div>
            <div class="cube _999"></div>
            <strong>#999999</strong>
        </div>
        <div>
            <div class="cube _bbb"></div>
            <strong>#bbbbbb</strong>
        </div>
        <div>
            <div class="cube _ccc"></div>
            <strong>#cccccc</strong>
        </div>
        <div>
            <div class="cube _ddd"></div>
            <strong>#dddddd</strong>
        </div>
        <div>
            <div class="cube _eee"></div>
            <strong>#eeeeee</strong>
        </div>
    </section>
    <section class="three-cols">
        <div>
            <div class="cube _f1f1f1"></div>
            <strong>#f1f1f1</strong>
        </div>
        <div>
            <div class="cube _f4f4f4"></div>
            <strong>#f4f4f4</strong>
        </div>
        <div>
            <div class="cube _f8f8f8"></div>
            <strong>#f8f8f8</strong>
        </div>
        <div>
            <div class="cube _fbfbfb"></div>
            <strong>#fbfbfb</strong>
        </div>
    </section>
    <h4>Validation Messages</h4>
    <section class="three-cols">
        <div>
            <div class="cube _0093c3"></div>
            <strong>#0093c3</strong>
        </div>
    </section>
    <h4>HTTP Links</h4>
    <section class="three-cols">
        <div>
            <div class="cube _3087C8"></div>
            <strong>#3087C8</strong>
        </div>
    </section>
    <h4>Milestones</h4>
    <section class="three-cols">
        <div>
            <div class="cube _999"></div>
            <strong>#999999 [ not-applicable ]</strong>
        </div>
    </section>
    <section class="three-cols">
        <div>
            <div class="cube _f13b3b"></div>
            <strong>#f13b3b [ not-done ]</strong>
        </div>
    </section>
    <section class="three-cols">
        <div>
            <div class="cube _ebb701"></div>
            <strong>#ebb701 [ in-progress ]</strong>
        </div>
    </section>
    <section class="three-cols">
        <div>
            <div class="cube _039C25"></div>
            <strong>#039C25 [ done ]</strong>
        </div>
    </section>
</article>
    
<article>
    <a name="icons"><div class="spacer"></div></a>
    <h3>Icons</h3>
    <h4>MK Set</h4>
    <p>When adding a new slider menu item, please ensure you check the available icons below that you feel are relevant to the section. If there's not one available, please contact the <a href="mailto:mike.king@umusic.com?subject=UMG%20Platform%20Style%20Guides">Contact Author</a> of this document. *Note: All images used across the platform are data url's, these can be referenced in the 'images-data.less' file.</p>
    <div><img src="images/icons.png" alt="Bespoke StudioHub Icons"/></div>

    <a name="icons"><div class="spacer"></div></a>

    <h4>Bootstrap Glyphicons</h4>
    <p>Please go to <a href="https://getbootstrap.com/docs/3.3/components/" target="_Blank">Bootstrap Glyphicons</a> to view the complete set.</p>
    <div><img src="images/glyphicons.png" alt="Bootstrap Glyphicons" /></div>

</article>

</section>  

<!------------------------------------------------------------------- NAVIGATION ------------------------------------------------------------------->
<section>
    <article>
        <a name="navigation"><div class="spacer"></div></a>
        <h2>navigation</h2>
        <h3>UMG Platform</h3>
        <p>The Platform Navigation serves a few different purposes. It allows those users with sufficient permissions to switch between the different workspace and also acts as a breadcumb and overall site navigation.</p>
        <div class="global-platform-nav"><img src="images/platform-navigation.png" alt="Global Platform Navigation" /></div>
    </article>
    
    <article>
        <a name="mainnav"><div class="spacer"></div></a>
        <h3>Main Navigation</h3>
        <p>Below is an example of the main site Navigation which sits within the light grey section of the Header <strong>(Overview, Progress, Recordings...)</strong>. This is a very simple single-level component with a count injected at the end. There are some further features that are added such as status markers within Product Approvals section.</p>
        <div><img src="images/main-nav.png" alt="Main Navigation"/></div>
    </article>
    
    <article>
        <a name="quicklinks"><div class="spacer"></div></a>
        <h3>Quick Links</h3>
        <h4>Usage</h4>
        <p>The Quick Links Navigation contains useful <strong>section-focused</strong> links such as Comments, Print and Team Members.</p>
        <div><img src="images/quick-links.png" alt="Quick Links" /></div>
    </article>
    
    <article>
        <a name="sliders"><div class="spacer"></div></a>
        <h3>Sliders</h3>
        <h4>General</h4>
        <p>Sliders are neatly tucked away to the side in order to save space.</p>
        <h6>Activity Stream</h6>
        <p>Is what it says on the tin really. A handy way to gain more information about recent activities such as Milestone changes and Apprpval Pregress.</p>
        <h6>Tools</h6>
        <p>Tools are accessible throughout the site and should always reflect the section you're in. It enables users to Activate and Create Projects, Create and Search for Deals, Manage stuff such as Label logos and Teams etc..</p>
        <h6>My Tasks</h6>
        <p>My Tasks is a quick way to gather info about you're next steps and tasks that require your action. There is also a badge to indicate the number of tasks you have remaining.</p>
        <ul class="list-inline activity">
            <li><img src="images/activity.png" alt="Activity Stream"/></li>
            <li><img src="images/tools.png" alt="Tools"/></li>
            <li><img src="images/tasks.png" alt="Tasks"/></li>
        </ul>
    </article>
</section>
<!------------------------------------------------------------------- MARKUP ------------------------------------------------------------------->
<section>
<article>
    <a name="html5"><div class="spacer"></div></a>
    <h2>Markup</h2>
    <h3>HTML5</h3>
    <p>For business reasons, currently all sites under the UMG Platform are non-responsive and there is no mobile version available. This can be a problem when it comes to rendering the site on the various devices with varying screen resolution. In order to solve this challenge, the platform has been designed to use a 'fluid' layout using 'Unordered Lists' modified to reposition content depending on screen resolution, so that when viewed on a smaller screens, the page should wrap naturally and still maintain a structured layout without breaking the overall affect.
    </p>
    <p>Below is an example of the HTML5 markup structure. UMG Platform uses a variation of this but in priciple, your page should have as few tags as possible. A wrapper 'Section' with and section components wrapped in 'Article Tags'. Any left section should be wrapped in an 'Aside' and Navigation wrapped in a 'Nav' tag and so on...</p>
    <h4>Example</h4>
    <p><img src="images/html5.png" alt="HTML5 Markup"/>
    </p>
</article>
    
<article>
    <a name="lists"><div class="spacer"></div></a>
    <h3>Unordered Lists</h3>
    <h4>Inline Lists for Fluid Layout</h4>
    <h6>add class "list-inline" to the ul</h6>
    <p>Always try and use inline-lists. These have been adapted to wrap content on smaller screens. You may also need to add a label tag, in this example it should go above the 'glyphicon-remove-circle'. If you do need to add a label, please also add a 'clear left' class to the remove glyph 'glyphicon-remove-circle clear-left'.</p>
    <img src="images/inline-lists.png" alt="Inline List"/>
    <form name="list-inline">
        <textarea readonly type="text" id="listInline">
                <section>
                    <article ng-hide=”showingForm”>
                        <h2>Contributors</h2>
                        <ul class=”list-inline”>
                            <li>
                                <i class="glyphicon glyphicon-remove-circle"></i>
                                <strong>Paul Smith</strong>
                                <i class="glyphicon glyphicon-pencil glyphicon-inline"></i>
                            </li>
                            <li>
                                <i class="glyphicon glyphicon-remove-circle"></i>
                                <strong>Republic Records</strong>
                                <i class="glyphicon glyphicon-pencil glyphicon-inline"></i>
                            </li>
                            <li>
                                <i class="glyphicon glyphicon-remove-circle"></i>
                                <strong>16 July 1980</strong>
                                <i class="glyphicon glyphicon-pencil glyphicon-inline"></i>
                            </li>
                        </ul>
                    </article>
                    <form ng-show=”showingForm”>
                        <ul class=”list-inline”>
                            <li>
                                <label>Name</label>
                                <input placeholder=”Name” type=“text” />
                            </li>
                            <li>
                                <label>Label</label>
                                <input placeholder=”Label” type=“text” />
                            </li>
                            <li>
                                <label>D.O.B</label>
                                <input placeholder=”D.O.B” type=“text” />
                            </li>
                            <li>
                                <button class=”grey-button” type=“submit”>Cancel</button>
                                <button class=”submit” type=“submit”>Save</button>
                            </li>
                        </ul>
                    </form>
                </section>
            </textarea>
        <button class="copy" data-copytarget="#listInline">copy html</button>
    </form>
    <div class="divider"></div>
    <h4>Standard Lists</h4>
    <h6>add class "standard-list" to the ul</h6>
    <p>Below is an example of a standard list. If your design requires this type of layout, please use the class name 'standard-list'. This will force any nested lists within a given inline-list to render in the standard layout. If you required a bullet list, please add the class 'list-bullet'.</p>
    <img src="images/block-lists.png" alt="list-standard"/>
    <form name="standard-list">
        <textarea readonly type="text" id="standardList">
                <section>
                    <article>
                        <h2>Contributors</h2>
                        <ul class=”list-standard”>
                            <li>
                                <i class="glyphicon glyphicon-remove-circle"></i>
                                <strong>Paul Smith</strong>
                                <i class="glyphicon glyphicon-pencil glyphicon-inline"></i>
                            </li>
                            <li>
                                <i class="glyphicon glyphicon-remove-circle"></i>
                                <strong>Republic Records</strong>
                                <i class="glyphicon glyphicon-pencil glyphicon-inline"></i>
                            </li>
                            <li>
                                <i class="glyphicon glyphicon-remove-circle"></i>
                                <strong>16 July 1980</strong>
                                <i class="glyphicon glyphicon-pencil glyphicon-inline"></i>
                            </li>
                        </ul>
                    </article>
                    <form ng-show=”editing”>
                        <ul class=”list-standard”>
                            <li>
                                <label>Name</label>
                                <input placeholder=”Name” type=“text” />
                            </li>
                            <li>
                                <label>Label</label>
                                <input placeholder=”Label” type=“text” />
                            </li>
                            <li>
                                <label>D.O.B</label>
                                <input placeholder=”D.O.B” type=“text” />
                            </li>
                            <li>
                                <button class=”grey-button” type=“submit”>Cancel</button>
                                <button class=”submit” type=“submit”>Save</button>
                            </li>
                        </ul>
                    </form>
                </section>
            </textarea>
        <button class="copy" data-copytarget="#standardList">copy html</button>
    </form>
</article>
    
<article>
    <a name="tables"><div class="spacer"></div></a>
    <h3>Tables</h3>
    <h4>Full Width with Pop-Under</h4>
    <p>Most tables across UMG Platform should use this style table. Add the class 'table-striped' to the opening table tag.</p>
    <p><strong>*Note:</strong> You must include a table outer wrapper element with the class name <strong>'alternating-background-wrapper'</strong>. The CSS within the solution will deal with the layout. Please also note that if you require the pop-under panel for 'table-striped' you must add your row repeater to the 'tbody' and <strong>NOT</strong> the 'tr' tag so as to encapsulate the upper and lower rows.</p>
    <h6>Table Striped</h6>
    <img src="images/table-striped.png" alt="Table-Striped" />
    <form name="table-striped">
        <textarea readonly type="text" id="tableStriped">
                <table class="table-striped">
                    <thead>
                        <tr>
                            <th><label>&nbsp;</label></th>
                            <th><label>#</label></th>
                            <th><label>Title</label></th>
                            <th><label>Parental<br>Advisory</label></th>
                            <th><label>Version<br>Title</label></th>
                            <th><label>Artist</label></th>
                            <th><label>ISRC</label></th>
                        </tr>
                    </thead>
                    <tbody> <!-- repeat the body element to encapsulate the lower pop-under row 'expanded-details' -->
                        <tr>
                            <td class="toggle" click.delegate="toggleCurrentRow(track)"></td> <!-- arrow to toggle bottom row 'expanded-details' -->
                            <td>10</td>
                            <td>Timothy Where You Been (Featuring Jet)</td>
                            <td>NotApplicable</td>
                            <td>Track Version</td>
                            <td>Timbaland, Jet</td>
                            <td>USUM70913840</td>
                        </tr>
                        <tr class="expanded-details" show.bind="IsExpanded"> <!-- 'expanded-details' row -->
                            <td colspan="7">
                                <section>
                                    <h2>Rights Restriction</h2>
                                    <table>
                                        <thead>
                                            <tr>
                                                <th><label>Restrictions</label></th>
                                                <th><label>Rights</label></th>
                                                <th><label>Countries</label></th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <tr>
                                                <td>Rights Restricted</td>
                                                <td>Ad-Funded, Streaming</td>
                                                <td>World</td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </section>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </textarea>
        <button class="copy" data-copytarget="#tableStriped">copy html</button>
    </form>
</article>
<article>
    <a name="scrolling"><div class="spacer"></div></a>
    <h3>Scrolling</h3>
    <h4>JavaScript Version</h4>
    <p>To enable the JavaScript Scrolling feature please add <strong>'data-perfect-scrollbars'</strong> to your container element.</p>
        
    <h4>More Reliable Bespoke Version</h4>
    <p>The JavaScript version above doesn't always work as it should do and is a bit buggy, therefore I wrote a more simple CSS-Based version, implemention detailed below.</p>
    <h6>Remember to set a min-height and max-height class</h6>
    <form name="scroll">
        <textarea readonly type="text" id="scroll">
                <article class="scroll-outer">
                    <section class="scroll-inner minheight350 maxheight350 full-width-element">
                        My Content I want to scroll...
                    </section>
                </article>
            </textarea>
        <button class="copy" data-copytarget="#scroll">copy html</button>
    </form>

</article>
<article>
    <a name="stickyHeaders"><div class="spacer"></div></a>
    <h3>Sticky Header</h3>
    <h4>Fixed Table Headers</h4>
    <p>In some scenarios you may want to fix the header when scrolling page with a large amount of data. In this case there is a directive available in the solution called <strong>'stickyElement'</strong>. To use it you'll need to pass in the sticky-element attribute.
    </p>
    <h6>Example of the Sticky Header</h6>
    <img src="images/sticky.png" alt="Sticky Header"/>
    <form name="stickyHead">
        <textarea readonly type="text" id="sticky">
                <thead sticky-element buffer="45">
                    <tr>
                        <td>
                            <label>Task Type</label>
                        </td>
                        <td>
                            <label>Task Name</label>
                        </td>
                        <td>
                            <label>Description</label>
                        </td>
                        <td>
                            <label>Age of Task</label>
                        </td>
                        <td>
                            <label>Last Updated</label>
                        </td>
                    </tr>
                </thead>
        </textarea>
        <button class="copy" data-copytarget="#sticky">copy html</button>
    </form>
</article>
</section>
<!------------------------------------------------------------------- CONTROLS ------------------------------------------------------------------->
<section>
<article>
    <a name="buttons"><div class="spacer"></div></a>
    <h2>Controls</h2>
    <h3>Buttons</h3>
    <h4>Forms and General Use</h4>
    <p>Please enure you use the below buttons when creating forms and wherever a strong call-to-action is required. There is one variation which can be found under the '<a href="#popups">Popups</a>' section where the buttons span the content area but mostly they will be displayed as shown below.</p>
    <div><img src="images/buttons-main.png" alt="Buttons" /></div>
    <p>
        <h6>Class Names</h6>
        <ul>
            <li>White classname = <strong>submit-white</strong></li>
            <li>Charcoal classname = <strong>grey-button</strong></li>
            <li>Red classname = <strong>submit</strong></li>
            <li>Read Only classname = <strong>read-only</strong></li>
            <li>For correct v-alignment withing a UL class = 'list-inline', add the classname <strong>submit-inline</strong></li>
        </ul>
    </p>
    <p>Please note that if the buttons appear in the 'inline-list' UL <strong>(UL class = inline-list)</strong>, then for the correct vertical alignment, please add the classname 'submit-inline' to the button itself. Also, if using the grey and red buttons together in the same 'li' element, please ensure that the charcoal button is on the left and the red button is on the right. This is to ensure consistency, if it's the other way around then the margins won't kick-in and they will be shunted together.</p>
        
    <h4>Bootstrap Icons</h4>
    <p>Used as buttons in some cases for editing 'glyphicon-pencil', deleting 'glyphicon-remove-circle' etc. I also created a bespoke set of icons which can be found under <a href="#other">Navigation/Other</a> (Mainly used for Navigation) but there's an additional set that can be found in the solution, within the <strong>'images-data.less'</strong> file. These can be used in conjunction with the <a target="_blank" href="http://getbootstrap.com/components/">Bootstrap Icons</a></p>
        
</article>
<article>
    <a name="popupsmoreinfo"><div class="spacer"></div></a>
    <h3>Popups</h3>
    <h4>Cloud Help - only used for more info</h4>
    <p>There are a few variations of the cloud-help directive depending on how you want to use it. It can be found in the solution here: <strong>Areas/Common/Modules/Popups/CloudPopup.cshtml</strong></p>
    <p><strong>Note:</strong> This popup should only ever be used as a tooltip for more detailed information. Refer to the Label Landing Page in LWS for a working example.</p>
    <p>
        <ul class="list-inline">
            <li>
                <h6>Position center bottom of icon</h6>
                <div><img src="images/cloud-help-bottom.png" alt="Cloud Help Bottom Centered" /></div>
            </li>
            <li>
                <h6>Position bottom left of icon</h6>
                <div><img src="images/cloud-help-bottom-left.png" alt="Cloud Help Bottom Left" /></div>
            </li>
            <li>
                <h6>Position bottom right of icon</h6>
                <div><img src="images/cloud-help-bottom-right.png" alt="Cloud Help Bottom Right" /></div>
            </li>
        </ul>
    </p>
    <p>
        <ul class="list-inline margin-bottom">
            <li>
                <h6>Position center top of icon</h6>
                <div><img src="images/cloud-help-top.png" alt="Cloud Help Top Centered" /></div>
            </li>
            <li>
                <h6>Position top left of icon</h6>
                <div><img src="images/cloud-help-top-right.png" alt="Cloud Help Top Left" /></div>
            </li>
            <li>
                <h6>Position top right of icon</h6>
                <div><img src="images/cloud-help-top-left.png" alt="Cloud Help Top Right" /></div>
            </li>
        </ul>
    </p>
    <div class="divider"></div>
    <h6>Markup</h6>
    <form name="list-inline">
        <textarea readonly type="text" id="CloudPopup">        
            <!--
            PLEASE NOTE THAT THIS POPUP SHOULD ONLY EVER BE USED FOR DISPLAYING READONLY DATA FOR EXAMPLE 
            INFROMATION ABOUT A PRODUCER NAME AND TELEPHONE NUMBER ECT. IF YOU REQUIRE A POPUP
            TO DISPLAY FORM DATA, PLEASE USE THE 'status-popup-wrapper-right'
                
            YOU CAN CHANGE THE POSITION OF THE BELOW POPUP BY CHANGING THE 'position' PARAMETER. 
            CLASS NAMES ARE AS FOLLOWS:

                position="top"
                position="bottom"
                position="top-right"
                position="bottom-right"
                position="top-left"
                position="bottom-left"
                
                THERE'S ALSO A READ-ONLY PARAM AND AN H3 TITLE TAG IF NEEDED.
            -->
            <div class="relative float-left">
                <a class="call-to-action no-wrap margin-left" cloud-popup-handle="showMeMoreInt_{{ master.Id }}">({{ master.InternalVersionTitles.length }}) titles</a>
                <cloud-popup name="showMeMoreInt_{{ master.Id }}" read-only="false" title="" position="bottom" stop-propagation>
                   <ul>
                       <li>Your Content Here...</li>
                   </ul>
                </cloud-popup>
            </div>
            <!-- OPTION IF EXCLAMATION MARK IS REQUIRED -->
            <div>
                <strong class="float-left">view additional info</strong>
                <span class="exclamation relative" cloud-popup-handle="additionalInfo_{{ master.Id }}">
                    <cloud-popup name="additionalInfo_{{ master.Id }}" read-only="false" title="" position="bottom" stop-propagation>
                        <ul>
                            <li>{{song.AdditionalInformation}}</li>
                        </ul>
                    </cloud-popup>
                </span>
            </div>
            </textarea>
        <button class="copy" data-copytarget="#CloudPopup">copy html</button>
    </form>

    <p><strong>Note:</strong> Remember to change to position attribute to either 'top', 'top-left', 'top-right', 'bottom', 'bottom-left', 'bottom-right'.</p>
    
</article>
    
    
<article>
    <a name="popupsmanage"><div class="spacer"></div></a>
    <h3>Popups</h3>
    <h4>Set Status Popups - used for managing content</h4>
    <p>There are a few variations of the set-status-popup depending on how you want to use it. To view current usage, run a search in the solution against *html for 'set-status-popup'. The actual directive name is 'SetStatusPopup.cshtml'</p>
    <p><strong>Note:</strong> The HTML below contains all variations depending on whether you want to display the popup on the top, right, bottom or left of the call-to-action.</p>
    <img src="images/set-status-popup.png" alt="Set Status Popup" />
    <img src="images/set-status-popup-right.png" alt="Set Status Popup Right" />
    <div class="divider"></div>

    <h6>Markup</h6>
    <form name="list-inline">
        <textarea readonly type="text" id="SetStatusPopup">
            <!--
            THE BELOW CLASS 'status-popup-wrapper-right' WILL POSITION THE POPUP TO THE RIGHT OF YOUR 'call-to-action'.
            YOU CAN HAVE THE POPUP APPEAR ON THE TOP, RIGHT, BOTTOM OR LEFT.
            FOR EXAMPLE, JUST CHANGE THIS CLASS TO 'status-popup-wrapper-left'

            PLEASE NOTE THAT THIS POPUP SHOULD ONLY EVER BE USED FOR DISPLAYING FORM DATA. IF YOU REQUIRE A POPUP
            TO DISPLAY READONLY DATA, FOR EXAMPLE INFROMATION ABOUT A PRODUCER NAME AND TELEPHONE NUMBER ECT, PLEASE
            USE THE <cloud-popup> DIRECTIVE
            -->

        <section class="status-popup-wrapper-right">
        <a class="glyphicon glyphicon-pencil" data-set-status-popup-handle="someVar_{{ someId }}"></a>
                <!--<a class="call-to-action" data-set-status-popup-handle="someVar_{{ someId }}">You May Want a Link?</a>-->
        <set-status-popup name="someVar_{{ someId }}" article-class="" on-open="popupStatus=true" on-close="popupStatus=false">
        <form name="myForm" ng-submit="myForm.$valid" novalidate>
        <ul class="list-inline">
        <li>
        <input type="radio" />



        <label>Must Appear After Radio</label>
                            </li>
        <li>
        <input type="checkbox" />



        <label>Must Appear After Checkbox</label>
                            </li>
        <li>
        <label>Must Be Before Input</label>
        <input class="clear-left" type="text" value="" />



                            </li>
        <li>
                                <!-- Example Validation for Email with Required Marker -->
        <label for="Email">@Text.Label("Email")</label>
        <input type="email" name="EmailAddress" placeholder="Email" data-ng-model="myFormModel.EmailAddress" />



        <required-marker field="myForm.EmailAddress"></required-marker>
        <email-error field="myForm.EmailAddress"></email-error>
                            </li>
        <li>
        <button type="submit" class="submit" data-set-status-popup-close="someVar_{{ someId }}" data-ng-click="var.whatEverMethod() && myForm.$valid">Save</button>
                            </li>
                        </ul>
                    </form>
                </set-status-popup>
            </section>
            
            <!--
            THE BELOW VERSION IS ONLY USED ONCE AT THE TOP OF EVERY PAGE WITHIN STUDIOHUB THAT 
            REQUIRES AN INITIAL SETUP STAGE, FOR EXAMPLE ADDING A NEW SET OF DATA TO THE PAGE.
            -->

        <header>
        <section class="status-popup-wrapper-bottom">
        <button class="submit-white" data-set-status-popup-handle="someVar_{{ someId }}">Create Verification Request</button>
        <set-status-popup name="someVar_{{ someId }}" article-class="" on-open="popupStatus=true" on-close="popupStatus=false">
        <form name="myForm" ng-submit="myForm.$valid" novalidate>
        <div class="margin-bottom-xlarge clear-left full-width-element">
        <h3>Title Must Appear Before List</h3>
        <ul class="list-inline">
        <li>
        <input type="radio" />



        <label>Must Appear After Radio</label>
                                    </li>
        <li>
        <input type="checkbox" />



        <label>Must Appear After Checkbox</label>
                                    </li>
        <li>
        <label>Must Be Before Input</label>
        <input class="clear-left" type="text" value="" />



                                    </li>
        <li>
                                        <!-- Example Validation for Email with Required Marker -->
        <label for="Email">@Text.Label("Email")</label>
        <input type="email" name="EmailAddress" placeholder="Email" data-ng-model="myFormModel.EmailAddress" />



        <required-marker field="myForm.EmailAddress"></required-marker>
        <email-error field="myForm.EmailAddress"></email-error>
                                    </li>
                                </ul>
                            </div>
        <div class="double">
        <button type="button" class="grey-button" data-set-status-popup-close="someVar_{{ someId }}">@Text.Label("Cancel")</button>
        <button type="submit" class="submit" ng-show="myForm.$valid" data-ng-click="var.whatEverMethod() && myForm.$valid">Save</button>
        <button type="submit" class="readOnly" ng-show="!myForm.$valid">Save</button>
                            </div>
                        </form>
                    </set-status-popup>
                </section>
            </header>
</textarea>
        <button class="copy" data-copytarget="#SetStatusPopup">copy html</button>
    </form>
    <p><strong>Note:</strong> Remember to change to position attribute to either 'top', 'top-left', 'top-right', 'bottom', 'bottom-left', 'bottom-right'.</p>
    <h4>Set Status Popups for General Forms</h4>
    <p>Used throughout StudioHub for managing Form Data.</p>
    <img src="images/set-status-popup-small.png" alt="Set Status Popup" />
    <form name="list-inline">
        <textarea readonly type="text" id="SetStatusPopupTwo">

        </textarea>
        <button class="copy" data-copytarget="#SetStatusPopupTwo">copy html</button>
    </form>
</article>

<article>
    <a name="expandcollapse"><div class="spacer"></div></a>
    <h3>Expand & Collapse Multiple Panels</h3>
    <h4>Version when no Id</h4>
    <ul class="list-inline margin-bottom">
        <li><img src="images/expand-collapse.png" alt="Expand Collapse" /></li>
        <li><img src="images/expandcollapseopen.png" alt="Expand Collapse" /></li>
    </ul>
    <form name="expand-collapse">
        <textarea readonly type="text" id="expandCollapseNoId">
                span class="toggle-masters">
                <a class="call-to-action margin-right" ng-click="setExpandedForAllSections(true)" ng-hide="areAllExpanded()">expand-all</a>
                <a class="call-to-action margin-right" ng-click="setExpandedForAllSections(false)" ng-show="isAnyExpanded()">collapse-all</a>
                </span>

                <section class="masters-data toggleClosed" data-ng-class="{ 'toggleOpen': generalExpanded }">
                    <h2 data-ng-click="generalExpanded=!generalExpanded">General</h2>
                    <section-general data-ng-if="generalExpanded"></section-general>
                </section>
                <section class="masters-data toggleClosed" data-ng-class="{ 'toggleOpen': rightsExpanded }">
                    <h2 data-ng-click="rightsExpanded=!rightsExpanded">Rights</h2>
                    <section-rights data-ng-if="rightsExpanded"></section-rights>
                </section>
                <section class="masters-data toggleClosed" data-ng-class="{ 'toggleOpen': contributorsExpanded }">
                    <h2 data-ng-click="contributorsExpanded=!contributorsExpanded">Contributors</h2>
                    <section-contributors data-ng-if="contributorsExpanded"></section-contributors>
                </section>
                <section class="masters-data toggleClosed" data-ng-class="{ 'toggleOpen': sessionsExpanded }">
                    <h2 data-ng-click="sessionsExpanded=!sessionsExpanded">Sessions</h2>
                    <section-sessions data-ng-if="sessionsExpanded"></section-sessions>
                </section>
                <section class="masters-data toggleClosed" data-ng-class="{ 'toggleOpen': writersExpanded }">
                    <h2 data-ng-click="writersExpanded=!writersExpanded">Writers</h2>
                    <section-writers data-ng-if="writersExpanded"></section-writers>
                </section>
                <section class="masters-data toggleClosed" data-ng-class="{ 'toggleOpen': creditsExpanded }">
                    <h2 data-ng-click="creditsExpanded=!creditsExpanded">Credits</h2>
                    <section-credits data-ng-if="creditsExpanded"></section-credits>
                </section>

                JavaScript
                ----------

                $scope.areAllExpanded = function () {
                return  $scope.generalExpanded && $scope.sessionsExpanded && $scope.rightsExpanded &&
                $scope.contributorsExpanded && $scope.writersExpanded && $scope.creditsExpanded;
                };

                $scope.isAnyExpanded = function () {
                return  $scope.generalExpanded || $scope.sessionsExpanded || $scope.rightsExpanded ||
                $scope.contributorsExpanded || $scope.writersExpanded || $scope.creditsExpanded;
                };

                $scope.setExpandedForAllSections = function (expanded) {
                $scope.generalExpanded = $scope.sessionsExpanded = $scope.rightsExpanded =
                $scope.contributorsExpanded = $scope.writersExpanded = $scope.creditsExpanded =
                $scope.expandAll = expanded;
                };
            </textarea>
        <button class="copy" data-copytarget="#expandCollapseNoId">copy html</button>
    </form>
        
    <h4>Version when have an Id</h4>
    <form name="expand-collapse">
        <textarea readonly type="text" id="expandCollapseHasId">

                <a class="call-to-action expandLink" data-ng-click="toggleAll('expand')">expand all</a>
                <a class="call-to-action collapseLink" data-ng-click="toggleAll('collapse')">collapse all</a>
                
                JavaScript
                ----------

                var rowsExpanded = {};
                var modes = { expand: 'expand', collapse: 'collapse' };
                var expandMode = modes.expand;

                $scope.toggleRow = function (itemId) {
                rowsExpanded[itemId] = rowsExpanded[itemId] ? false : true;
                };

                $scope.toggleAll = function (toMode) {
                var toggleItemExpansion = function (item) {
                rowsExpanded[item.Id] = toMode === modes.expand ? true : false;
                };
                $scope.songs.forEach(toggleItemExpansion);
                $scope.orphanSongs.forEach(toggleItemExpansion);
                $scope.commitments.forEach(toggleItemExpansion);
                $scope.childlessCommitments.forEach(toggleItemExpansion);
                expandMode = toMode === modes.expand ? modes.collapse : modes.expand;
                };

                $scope.canToggleAll = function (toMode) {
                return expandMode === toMode;
                };

                $scope.canToggle = function (itemId, toMode) {
                switch (toMode) {
                case modes.expand:
                return !rowsExpanded[itemId];
                case modes.collapse:
                return rowsExpanded[itemId] === true;
                default:
                throw new Error('Don\'t know mode ' + toMode);
                }
                };

                $scope.toggle = function (itemId, toMode) {
                return rowsExpanded[itemId] = toMode === modes.expand ? true : false;
                };

                $scope.expanded = function (itemId) {
                return rowsExpanded[itemId] === true;
                };
                
</textarea>
        <button class="copy" data-copytarget="#expandCollapseHasId">copy html</button>
    </form>
        

</article>
</section>
<section>
    <article>
        <a name="comma"><div class="spacer"></div></a>
        <h2>Handy Snippets</h2>
        <h3>Optional Comma</h3>
        <p>Used to comma separate strings, removing the last comma automatically. Currently used on roles (Song-Overview Page).</p>
        <img src="images/optional-comma.png" alt="Optional Comma" />
        <h6>HTML</h6>
        <form name="cs-validation">
            <textarea readonly type="text" id="optComma"><span data-ng-repeat="">{{ item }}<optional-comma></optional-comma></span></textarea>
            <button class="copy" data-copytarget="#optComma">copy html</button>
        </form>
    </article>
    <article>
        <a name="match"><div class="spacer"></div></a>
        <h3>Match Element Heights</h3>
        <p>Used to dynamically find the tallest element in a given repeater and set all other elements within this repeater to its height (the tallest). 
            Why would I need to do this? When stacking block elements horizontally, for example lists that are displayed inline-block, 
            the elements that would normally wrap to the row below get stuck against the tallest (asuming there is a taller list-item before those that wrap).</p>
        <img src="images/optional-comma.png" alt="Optional Comma" />
        <h6>HTML</h6>
        <form name="matchHeights">
            <textarea readonly type="text" id="matchHeights">
                <ul class="list-inline">
                    <li data-ng-repeat="" match-element-height class="matchHeights">
                        *Note: Add the directive 'match-element-height' and classname 'matchHeights'.
                    </li>
                </ul>
            </textarea>
            <button class="copy" data-copytarget="#matchHeights">copy html</button>
        </form>
    </article>
    <article>
        <a name="attr"><div class="spacer"></div></a>
        <h3>Add Attributes</h3>
        <p>
            Bind additional attributes such as HTML or Text to a given string. For example, following a Song Title enclose a Version Title with parentheses.
        </p>
        <h6>HTML</h6>
        <form name="addAttr">
            <textarea readonly type="text" id="addAttr">
                ng-attr-title='{{song.SongTitle}} {{song.VersionTitle ? "(" + song.VersionTitle + ")" : "" }}'
            </textarea>
            <button class="copy" data-copytarget="#addAttr">copy html</button>
        </form>
    </article>
    <article>
        <a name="selects"><div class="spacer"></div></a>
        <h3>Select Dropdown</h3>
        <p>
            Please ensure you use the correct implementation for dropdown selects. The is a lookup available for these called 'lookupSelect.js'.
        </p>
        <img src="images/select.png" alt="Select Dropdown" />
        <h6>HTML</h6>
        <form name="lookUpSelect">
            <textarea readonly type="text" id="lookUpSelect">
                <div data-lookup-select="FullyRestrictedSensitivityTypes" 
                     data-ng-model="song.SensitivityType" 
                     data-label="{{ song.SensitivityType }}" 
                     data-ng-change="updateSongVersion(song)" 
                     data-allower="canUpdateSongVersion(song)"
                     data-show-close="true">
                </div>
            </textarea>
            <button class="copy" data-copytarget="#lookUpSelect">copy html</button>
        </form>
    </article>
    <article>
        <a name="print"><div class="spacer"></div></a>
        <h3>Printing</h3>
        <h4>Version Local to Your View</h4>
        <h6>HTML</h6>
        <form name="printWin">
            <textarea readonly type="text" id="printWin">
                <!-- ADD TO TYPESCRIPT -->
                public printSummaryReport = () => {
                    this.$scope.$broadcast('print-content');
                };
                <!-- ADD TO VIEW -->
                <a class="lab-cop-rep icons" data-ng-click="vm.printSummaryReport()"></a>
                <section ng-show="false" print-content>
                    <header>
                        <h1>Title</h1>
                        <button type="button" class="submit" onclick="printForm(this)">Print</button>
                    </header>
                    <header class="sub-header">
                        <img class="label-logo" data-ng-src="{{vm.getLabelFamilyLogoSrc()}}" />
                        <h2 class="clear-left">Artist: <strong>{{vm.verificationRequestToPrint.ArtistName}}</strong></h2>
                        <h2 class="clear-left">Project: <strong>{{vm.verificationRequestToPrint.ProjectName}}</strong></h2>
                    </header>
                    <section class="print-content">
                        <section class="print-content-inner">
                            <section class="page-break">
                                Your Content Here...
                            </section>
                        </section>
                    </section>
                </section>
            </textarea>
        <button class="copy" data-copytarget="#printWin">copy html</button>
        <h4>Version Local to Your View and Inside an ng-repeat</h4>
        <h6>HTML</h6>
        <form name="printWinTwo">
        <textarea readonly type="text" id="printWinTwo">
                <!-- SET VAR AT TOP ON TS -->
                public verificationRequestToPrint: any = {};
                <!-- INJECT -->
                public $scope, private $timeout,
                <!-- ADD OUTSIDE CONSTRUCTOR -->
                public printSummaryReport = (verificationRequest) => {
                    this.verificationRequestToPrint = verificationRequest;
                this.$timeout(() => { this.$scope.$broadcast('print-content'); });
                };
                <!-- ADD TO VIEW -->
                <a class="lab-cop-rep icons" data-ng-click="vm.printSummaryReport(verificationRequest)"></a>
                <section ng-show="false" print-content>
                    <header>
                        <h1>Title</h1>
                        <button type="button" class="submit" onclick="printForm(this)">Print</button>
                    </header>
                    <header class="sub-header">
                        <img class="label-logo" data-ng-src="{{vm.getLabelFamilyLogoSrc()}}" />
                        <h2 class="clear-left">Artist: <strong>{{vm.verificationRequestToPrint.ArtistName}}</strong></h2>
                        <h2 class="clear-left">Project: <strong>{{vm.verificationRequestToPrint.ProjectName}}</strong></h2>
                    </header>
                    <section class="print-content">
                        <section class="print-content-inner">
                            <section class="page-break">
                                Your Content Here...
                            </section>
                        </section>
                    </section>
                </section>
        </textarea>
        <button class="copy" data-copytarget="#printWinTwo">copy html</button>
        <h4>Version Using Module and Quicklinks</h4>
        <h6>HTML</h6>
        <form name="printWinThree">
            <textarea readonly type="text" id="printWinThree">
                <!-- ADD TO MODULE INSIDE STATE PROVIDER -->
                onEnter: function (headerData, songsOverviewService, currentSong, $timeout, $rootScope) {
                    var links = [
                        {
                            //See comment on songPrintOverview.js regarding complexities around song print view/song session info/songsOverviewService
                            title: 'Print',
                            'class': 'print-link',
                            onClick: function () {
                                $timeout(function () {
                                    $rootScope.$broadcast('print-song-approval-form');
                                    }, 0);
                                }
                            }
                        ];
                        headerData.setQuickLinks(links);
                    },
                    onExit: function (headerData) {
                        headerData.clearQuickLinks();
                }
                <!-- ADD TO TYPESCRIPT -->
                $scope.$on('print-song-approval-form', function (e, msg) {
                    this.showPrintView = true;
                    $timeout(() => {
                        $rootScope.$broadcast('print-content');
                    }, 0);
                });

                $scope.$on('print-content-close', function (e, msg) {
                    this.showPrintView = false;
                });
                <!-- ADD TO VIEW -->
                <section ng-show="false" print-content>
                    <header>
                        <h1>Title</h1>
                        <button type="button" class="submit" onclick="printForm(this)">Print</button>
                    </header>
                    <header class="sub-header">
                        <img class="label-logo" data-ng-src="{{vm.getLabelFamilyLogoSrc()}}" />
                        <h2 class="clear-left">Artist: <strong>{{vm.verificationRequestToPrint.ArtistName}}</strong></h2>
                        <h2 class="clear-left">Project: <strong>{{vm.verificationRequestToPrint.ProjectName}}</strong></h2>
                    </header>
                    <section class="print-content">
                        <section class="print-content-inner">
                            <section class="page-break">
                                Your Content Here...
                            </section>
                        </section>
                    </section>
                </section>
            </textarea>
            <button class="copy" data-copytarget="#printWinThree">copy html</button>
        </form>
    </article>
</section>
<section>
    <article>
        <a name="client"><div class="spacer"></div></a>
        <h2>Validation</h2>
        <h3>Client-Side</h3>
        <h4>Popup & Asterix</h4>
        <p>In the example below you'll see a small popup that appears when a given field in invalid. We don't use this everywhere, only when a user will need instruction. Therefore in most cases you'll only need to include the mandatory indicator 'Blue Asterix'</p>
        <p>Please remember to include the <strong>novalidate</strong> attribute to your form element <strong>(form name='myForm' novalidate)</strong> in order to disable the default HTML5 validation.</p>
        <img src="images/client-side-validation.png" alt="Client Side Validation" />
        <h6>HTML</h6>
        <form name="cs-validation">
            <textarea readonly type="text" id="csvalidation">
                <form name="myForm" novalidate data-ng-submit>
                    <!-- IMPORTANT: ALWAYS ADD THE "novalidate" ATTR TO YOUR FORM IN ORDER TO OVERRIDE STANDARD HTML5 VALIDATION -->
                    <ul>
                        <li>
                            <label for="Email">Email</label>
                            <input type="email" name="EmailAddress" placeholder="Email" data-ng-model="">
                            <span class="mandatory">*</span>
                            <!-- the code below is an existing directive used for email validation -->
                            <email-error field="myForm.EmailAddress"></email-error>
                            <!-- If you need to provide users with more details, please use the below code -->
                            <span class="errorMsg margin-left" data-ng-hide="myForm.$valid">
                                <span class="error-marker"></span>
                                <span class="error-txt">Add Your Comments Here...</span>
                            </span>
                        </li>
                    </ul>
                </form>
            </textarea>
            <button class="copy" data-copytarget="#csvalidation">copy html</button>
        </form>
    </article>

    <article>
        <a name="server"><div class="spacer"></div></a>
        <h3>Server-Side</h3>
        <p>Coming Soon...</p>
    </article>
</section>

</div>
</body>
</html>